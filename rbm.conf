# vim: filetype=yaml sw=2
debug: 1
compress_tar: gz
output_dir: "out/[% project %]"

pkg_type: build

var:
  tormessenger_version: '0.3.0b1'
  build_id: '[% sha256(c("var/build_id_txt")).substr(0, 6) %]'
  build_id_txt: |
    [% c("version") %]
    [% IF c("git_hash"); GET c("abbrev"); END; %]
    [% IF c("remote_docker") -%]
    [% c("distribution") %]
    [% END -%]
    input_files: [% c("input_files_id") %]
    build:
    [% c("build", { filename => 'f', output_dir => '/out' }) %]
  input_files_list: |
    [% FOREACH file IN c("input_files_by_name").keys.sort -%]
    [% c("input_files_by_name/" _ file) %]
    [% END -%]

targets:
  notarget: linux-x86_64
  noint:
    debug: 0
  linux-x86_64:
    distribution: Debian-7.11
    arch: x86_64
    var:
      linux: 1
      osname: linux-x86_64
      compiler: gcc
  linux-i686:
    distribution: Debian-7.11
    arch: i686
    var:
      linux: 1
      osname: linux-i686
      configure_opt: '--host=i686-linux-gnu CFLAGS=-m32 CXXFLAGS=-m32 LDFLAGS=-m32'
      compiler: gcc
      pre_pkginst: dpkg --add-architecture i386
  windows-i686:
    distribution: Ubuntu-14.10
    arch: i686
    var:
      windows: 1
      osname: windows-i686
      configure_opt: '--host=i686-w64-mingw32 CFLAGS="[% c("var/CFLAGS") %]" LDFLAGS="[% c("var/LDFLAGS") %]"'
      CFLAGS: '-specs=/var/tmp/dist/mingw-w64/msvcr100.spec -mwindows -fstack-protector-all -Wstack-protector --param ssp-buffer-size=4 -fno-strict-overflow -Wno-missing-field-initializers -Wformat -Wformat-security'
      LDFLAGS: '-specs=/var/tmp/dist/mingw-w64/msvcr100.spec -mwindows -Wl,--dynamicbase -Wl,--nxcompat -Wl,--enable-reloc-section -lssp -L$gcclibs'
      compiler: mingw-w64
  osx-x86_64:
    distribution: Ubuntu-12.04
    arch: x86_64
    var:
      osx: 1
      osname: osx-x86_64
      compiler: 'macosx-toolchain'
      configure_opt: '--host=x86_64-apple-darwin10 CC="x86_64-apple-darwin10-clang $CFLAGS" CXX="x86_64-apple-darwin10-clang++ $CXXFLAGS"'

  tor-messenger:
    var:
      tor-messenger: 1
      tor_socks_port: 9152
      tor_control_port: 9153

  tor-mail:
    var:
      tor-mail: 1
      tor_socks_port: 9154
      tor_control_port: 9155

  # The no_build_id target can be useful if you want to quickly display
  # a build template or other option but don't want to spend time to
  # compute the various build ids
  no_build_id:
    var:
      build_id: 1


docker_image: '[% pc("docker-image", "docker_save_image") %]'
hg_opt: '--config extensions.bundleclone=[% shell_quote(c("basedir") _ "/tools/version-control-tools/hgext/bundleclone/__init__.py") %]'

# change the default gpg_wrapper to allow git tag signed using an
# expired key.
# https://bugs.torproject.org/19737
gpg_wrapper: |
  #!/bin/bash
  export LC_ALL=C
  [%
      IF c('gpg_keyring');
          SET gpg_kr = '--keyring ' _ path(c('gpg_keyring'), path(c('gpg_keyring_dir'))) _ ' --no-default-keyring';
      END;
  -%]
  if [ $# -eq 4 ] && [ "$1" = '--status-fd=1' ] \
      && [ "$2" = '--verify' ]
  then
        [% c('gpg_bin') %] [% c('gpg_args') %] --with-fingerprint [% gpg_kr %] "$@" | sed 's/^\[GNUPG:\] EXPKEYSIG /\[GNUPG:\] GOODSIG /'
        exit ${PIPESTATUS[0]}
  else
        exec [% c('gpg_bin') %] [% c('gpg_args') %] --with-fingerprint [% gpg_kr %] "$@"
  fi
