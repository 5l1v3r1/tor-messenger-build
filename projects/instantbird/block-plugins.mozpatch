diff --git a/dom/plugins/base/nsPluginHost.cpp b/dom/plugins/base/nsPluginHost.cpp
--- a/dom/plugins/base/nsPluginHost.cpp
+++ b/dom/plugins/base/nsPluginHost.cpp
@@ -2085,6 +2085,26 @@
   }
 }
 
+PRBool nsPluginHost::GhettoBlacklist(nsIFile *pluginFile)
+{
+    nsCString leaf;
+    const char *leafStr;
+    nsresult rv;
+    
+    rv = pluginFile->GetNativeLeafName(leaf);
+    if (NS_FAILED(rv)) {
+        return PR_TRUE; // blacklist.
+    }
+
+    leafStr = leaf.get();
+
+    if (!leafStr) {
+        return PR_TRUE; // blacklist.
+    }
+
+    return PR_TRUE; // blacklist.
+}
+
 typedef NS_NPAPIPLUGIN_CALLBACK(char *, NP_GETMIMEDESCRIPTION)(void);
 
 nsresult nsPluginHost::ScanPluginsDirectory(nsIFile *pluginsDir,
@@ -2194,6 +2214,10 @@
       continue;
     }
 
+    if (GhettoBlacklist(localfile)) {
+        continue;
+    }
+
     // if it is not found in cache info list or has been changed, create a new one
     if (!pluginTag) {
       nsPluginFile pluginFile(localfile);
diff --git a/dom/plugins/base/nsPluginHost.h b/dom/plugins/base/nsPluginHost.h
--- a/dom/plugins/base/nsPluginHost.h
+++ b/dom/plugins/base/nsPluginHost.h
@@ -334,6 +334,8 @@
   // Loads all cached plugins info into mCachedPlugins
   nsresult ReadPluginInfo();
 
+  PRBool GhettoBlacklist(nsIFile *pluginFile);
+
   // Given a file path, returns the plugins info from our cache
   // and removes it from the cache.
   void RemoveCachedPluginsInfo(const char *filePath,
